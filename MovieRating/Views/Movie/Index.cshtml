@using MovieRating.Data.Models
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using MovieRating.Data.Models.Dtos;

@model IEnumerable<MovieWithRatingDto>
@{int page = (Model as IPagedList)?.PageNumber ?? 0;}

@{
    ViewData["Title"] = "Movies";
}

<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h1>Movies</h1>

<p>
    <a asp-action="TopMovies">Top Movies</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReleaseDate)
            </th>
            <th>
                Rating
            </th>
            <th>
                 Your rating
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) 
{
        <tr>
            <td>
                @Html.ActionLink(item.Title, "Movie", new {movieId = item.Id})
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @item.ReleaseDate.ToShortDateString()
            </td>
            <td>
                @(item.AverageRating?.ToString("0.##") ?? "Rating is not available yet")
            </td>
            <td>
                @if (User.Identity?.IsAuthenticated is true)
                {
                        @using (Html.BeginForm("SetMovieRating", "Movie", new { movieId = item.Id, @page }, FormMethod.Post))
                        {
                            <fieldset>@Html.DropDownList(
                            "rating",
                            Enumerable.Range(0, 11)
                                       .Select(x => new SelectListItem() 
                                       { 
                                            Text = x.ToString(),
                                            Value = x.ToString(), 
                                            Selected = x == item?.UserRating
                                       }))
                            <p>
                                <input type="submit" value="Submit" />
                            </p>
                        </fieldset>
                    }
                }
            </td>
        </tr>
}
    </tbody>
</table>

@if(Model is IPagedList pagedList)
@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page }))
